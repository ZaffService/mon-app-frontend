{"version":3,"file":"index-91c0eb6c.js","sources":["../../src/utils/notifications.js","../../src/utils/api.js","../../src/utils/auth.js","../../src/utils/calls.js","../../src/utils/realtime.js","../../src/utils/chat-handler.js","../../src/utils/audio-recorder.js","../../src/script.js"],"sourcesContent":["export function showToast(message, type = \"info\") {\n  // Supprime les toasts existants\n  const existingToasts = document.querySelectorAll(\".toast\")\n  existingToasts.forEach((toast) => toast.remove())\n\n  // Crée le nouveau toast\n  const toast = document.createElement(\"div\")\n  const colors = {\n    success: \"#25D366\",\n    error: \"#ef4444\",\n    info: \"#8696a0\",\n    warning: \"#f59e0b\",\n  }\n\n  toast.className =\n    \"toast fixed right-4 top-4 p-4 rounded-lg text-white shadow-lg transform translate-x-full transition-all duration-300 z-50\"\n  toast.style.backgroundColor = colors[type]\n\n  toast.innerHTML = `\n    <div class=\"flex items-center\">\n      <i class=\"fas ${type === \"success\" ? \"fa-check-circle\" : type === \"error\" ? \"fa-exclamation-circle\" : type === \"warning\" ? \"fa-exclamation-triangle\" : \"fa-info-circle\"} mr-2\"></i>\n      <span>${message}</span>\n    </div>\n  `\n\n  document.body.appendChild(toast)\n\n  // Animation d'entrée\n  setTimeout(() => {\n    toast.style.transform = \"translateX(0)\"\n  }, 100)\n\n  // Animation de sortie et suppression\n  setTimeout(() => {\n    toast.style.transform = \"translateX(100%)\"\n    setTimeout(() => toast.remove(), 300)\n  }, 3000)\n}\n\nexport function showNotification(title, body, icon = null) {\n  // Vérifier si les notifications sont supportées et autorisées\n  if (!(\"Notification\" in window)) {\n    console.log(\"Ce navigateur ne supporte pas les notifications\")\n    return\n  }\n\n  if (Notification.permission === \"granted\") {\n    // Créer la notification\n    const notification = new Notification(title, {\n      body: body,\n      icon: icon || \"/placeholder.svg?height=64&width=64\",\n      badge: \"/placeholder.svg?height=32&width=32\",\n      tag: \"whatsapp-message\",\n      requireInteraction: false,\n      silent: false,\n    })\n\n    // Auto-fermer après 5 secondes\n    setTimeout(() => {\n      notification.close()\n    }, 5000)\n\n    // Gérer le clic sur la notification\n    notification.onclick = () => {\n      window.focus()\n      notification.close()\n    }\n  } else if (Notification.permission !== \"denied\") {\n    // Demander la permission\n    Notification.requestPermission().then((permission) => {\n      if (permission === \"granted\") {\n        showNotification(title, body, icon)\n      }\n    })\n  }\n\n  // Afficher aussi une notification dans l'interface\n  showInAppNotification(title, body, icon)\n}\n\nfunction showInAppNotification(title, body, icon) {\n  const container = document.getElementById(\"notificationContainer\")\n  if (!container) return\n\n  const notification = document.createElement(\"div\")\n  notification.className =\n    \"bg-[#202c33] border border-gray-600 rounded-lg p-4 shadow-lg max-w-sm transform translate-x-full transition-all duration-300\"\n\n  notification.innerHTML = `\n    <div class=\"flex items-start space-x-3\">\n      ${icon ? `<img src=\"${icon}\" alt=\"Avatar\" class=\"w-10 h-10 rounded-full object-cover flex-shrink-0\">` : '<div class=\"w-10 h-10 bg-green-500 rounded-full flex items-center justify-center flex-shrink-0\"><i class=\"fas fa-comment text-white\"></i></div>'}\n      <div class=\"flex-1 min-w-0\">\n        <h4 class=\"text-white font-medium text-sm truncate\">${title}</h4>\n        <p class=\"text-gray-400 text-sm mt-1 line-clamp-2\">${body}</p>\n      </div>\n      <button class=\"text-gray-400 hover:text-white flex-shrink-0\" onclick=\"this.parentElement.parentElement.remove()\">\n        <i class=\"fas fa-times text-sm\"></i>\n      </button>\n    </div>\n  `\n\n  container.appendChild(notification)\n\n  // Animation d'entrée\n  setTimeout(() => {\n    notification.style.transform = \"translateX(0)\"\n  }, 100)\n\n  // Auto-suppression après 5 secondes\n  setTimeout(() => {\n    notification.style.transform = \"translateX(100%)\"\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove()\n      }\n    }, 300)\n  }, 5000)\n\n  // Jouer un son de notification (optionnel)\n  playNotificationSound()\n}\n\nfunction playNotificationSound() {\n  try {\n    // Créer un son de notification simple\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)()\n    const oscillator = audioContext.createOscillator()\n    const gainNode = audioContext.createGain()\n\n    oscillator.connect(gainNode)\n    gainNode.connect(audioContext.destination)\n\n    oscillator.frequency.setValueAtTime(800, audioContext.currentTime)\n    oscillator.frequency.setValueAtTime(600, audioContext.currentTime + 0.1)\n\n    gainNode.gain.setValueAtTime(0.1, audioContext.currentTime)\n    gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.2)\n\n    oscillator.start(audioContext.currentTime)\n    oscillator.stop(audioContext.currentTime + 0.2)\n  } catch (error) {\n    console.log(\"Impossible de jouer le son de notification:\", error)\n  }\n}\n\nexport async function requestNotificationPermission() {\n  try {\n    const permission = await Notification.requestPermission();\n    return permission === 'granted';\n  } catch (error) {\n    console.error('Erreur permissions notifications:', error);\n    return false;\n  }\n}\n","const API_BASE_URL = process.env.NODE_ENV === 'production'\n  ? 'https://votre-backend.onrender.com'\n  : 'http://localhost:5001';\n\n// API principale\nconst api = {\n  async getChats() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/chats`);\n      return await response.json();\n    } catch (error) {\n      console.error('Erreur getChats:', error);\n      throw error;\n    }\n  },\n\n  async updateUserStatus(userId, isOnline) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/chats/${userId}`);\n      if (!response.ok) throw new Error('Erreur réseau');\n      \n      const user = await response.json();\n      const updatedUser = {\n        ...user,\n        isOnline,\n        lastSeen: new Date().toISOString()\n      };\n\n      const updateResponse = await fetch(`${API_BASE_URL}/chats/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedUser)\n      });\n\n      if (!updateResponse.ok) throw new Error('Erreur mise à jour statut');\n      return await updateResponse.json();\n    } catch (error) {\n      console.error('Erreur updateUserStatus:', error);\n      throw error;\n    }\n  }\n};\n\n// Exportation des fonctions\nexport const { getChats, updateUserStatus } = api;\nexport default api;\n\nexport async function getMessages(userId) {\n  try {\n    const response = await fetch(`${API_BASE_URL}/chats/${userId}`)\n    if (!response.ok) throw new Error('Erreur réseau')\n    const chat = await response.json()\n    return chat.messages || []\n  } catch (error) {\n    console.error('Erreur getMessages:', error)\n    return []\n  }\n}\n\nexport async function addMessage(userId, message) {\n  try {\n    // Récupérer le chat actuel\n    const response = await fetch(`${API_BASE_URL}/chats/${userId}`)\n    if (!response.ok) {\n      console.error(`Chat ${userId} non trouvé, création...`)\n      // Si le chat n'existe pas, le créer\n      return await createChatForUser(userId, message)\n    }\n    \n    const chat = await response.json()\n    chat.messages = chat.messages || []\n    chat.messages.push(message)\n    \n    // Mettre à jour le chat\n    const updateResponse = await fetch(`${API_BASE_URL}/chats/${userId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(chat)\n    })\n    \n    if (!updateResponse.ok) throw new Error('Erreur mise à jour')\n    return await updateResponse.json()\n    \n  } catch (error) {\n    console.error('Erreur addMessage:', error)\n    throw error\n  }\n}\n\nexport async function updateChat(userId, updates) {\n  try {\n    const response = await fetch(`${API_BASE_URL}/chats/${userId}`)\n    if (!response.ok) {\n      console.warn(`Chat ${userId} non trouvé pour mise à jour`)\n      return null // Ne pas lancer d'erreur, juste ignorer\n    }\n    \n    const chat = await response.json()\n    Object.assign(chat, updates)\n    \n    const updateResponse = await fetch(`${API_BASE_URL}/chats/${userId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(chat)\n    })\n    \n    if (!updateResponse.ok) throw new Error('Erreur mise à jour')\n    return await updateResponse.json()\n    \n  } catch (error) {\n    console.error('Erreur updateChat:', error)\n    return null // Ne pas lancer d'erreur\n  }\n}\n\nasync function createChatForUser(userId, message) {\n  try {\n    const newChat = {\n      id: userId,\n      name: `User ${userId}`,\n      avatar: `https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face`,\n      messages: [message],\n      lastMessage: message.text,\n      time: message.time,\n      lastMessageTime: message.timestamp,\n      unread: 0,\n      isOnline: false\n    }\n    \n    const response = await fetch(`${API_BASE_URL}/chats`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newChat)\n    })\n    \n    if (!response.ok) throw new Error('Erreur création chat')\n    return await response.json()\n    \n  } catch (error) {\n    console.error('Erreur createChatForUser:', error)\n    throw error\n  }\n}\n\nexport async function createUser(userData) {\n  try {\n    const response = await fetch(`${API_BASE_URL}/chats`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...userData,\n        messages: [],\n        isOnline: true,\n        lastSeen: new Date().toISOString()\n      })\n    })\n    \n    if (!response.ok) throw new Error('Erreur création utilisateur')\n    return await response.json()\n    \n  } catch (error) {\n    console.error('Erreur createUser:', error)\n    throw error\n  }\n}\n\nexport async function createNotification(notification) {\n  try {\n    const response = await fetch(`${BASE_URL}/notifications`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(notification),\n    })\n\n    if (!response.ok) {\n      throw new Error(`Erreur HTTP: ${response.status}`)\n    }\n\n    return await response.json()\n  } catch (error) {\n    console.error(\"Erreur createNotification:\", error)\n    throw error\n  }\n}\n\nexport async function getNotifications(userId) {\n  try {\n    const response = await fetch(`${BASE_URL}/notifications?userId=${userId}`)\n    if (!response.ok) {\n      throw new Error(`Erreur HTTP: ${response.status}`)\n    }\n\n    return await response.json()\n  } catch (error) {\n    console.error(\"Erreur getNotifications:\", error)\n    return []\n  }\n}\n\nexport async function updateMessageStatus(messageId, chatId, status) {\n  try {\n    const chatResponse = await fetch(`${BASE_URL}/chats/${chatId}`)\n    const chat = await chatResponse.json()\n\n    const messageIndex = chat.messages.findIndex((m) => m.id === messageId)\n    if (messageIndex !== -1) {\n      chat.messages[messageIndex].status = status\n\n      await fetch(`${BASE_URL}/chats/${chatId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(chat),\n      })\n    }\n  } catch (error) {\n    console.error(\"Erreur updateMessageStatus:\", error)\n  }\n}\n\nexport async function markMessagesAsRead(currentUserId, otherUserId) {\n  try {\n    const [currentUserChat, otherUserChat] = await Promise.all([\n      fetch(`${BASE_URL}/chats/${currentUserId}`).then((r) => r.json()),\n      fetch(`${BASE_URL}/chats/${otherUserId}`).then((r) => r.json()),\n    ])\n\n    if (currentUserChat.messages) {\n      currentUserChat.unread = 0\n\n      otherUserChat.messages = otherUserChat.messages.map((msg) => {\n        if (msg.senderId === currentUserId && msg.status !== \"read\") {\n          return { ...msg, status: \"read\" }\n        }\n        return msg\n      })\n    }\n\n    await Promise.all([\n      fetch(`${BASE_URL}/chats/${currentUserId}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(currentUserChat),\n      }),\n      fetch(`${BASE_URL}/chats/${otherUserId}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(otherUserChat),\n      }),\n    ])\n  } catch (error) {\n    console.error(\"Erreur markMessagesAsRead:\", error)\n  }\n}\n","import { showToast } from \"./notifications.js\";\nimport { getChats, updateUserStatus } from \"./api.js\";\n\nlet currentUser = null;\n\nfunction checkSession() {\n  const savedUser = localStorage.getItem(\"currentUser\");\n  if (savedUser) {\n    try {\n      const user = JSON.parse(savedUser);\n      setCurrentUser(user);\n      return user;\n    } catch (error) {\n      console.error(\"Erreur parsing user:\", error);\n      localStorage.removeItem(\"currentUser\");\n    }\n  }\n  return null;\n}\n\nexport function getCurrentUser() {\n  return currentUser || checkSession();\n}\n\nexport function setCurrentUser(user) {\n  currentUser = user;\n  if (user) {\n    localStorage.setItem(\"currentUser\", JSON.stringify(user));\n    updateUserStatus(user.id, \"en ligne\").catch(console.error);\n  } else {\n    localStorage.removeItem(\"currentUser\");\n  }\n}\n\nexport function logout() {\n  // Nettoyer l'intervalle de rafraîchissement\n  if (window.refreshInterval) {\n    clearInterval(window.refreshInterval);\n  }\n\n  // Nettoyer le stockage\n  localStorage.removeItem(\"currentUser\");\n\n  // Recharger la page\n  window.location.reload();\n}\n\nexport async function login(name, phone) {\n  try {\n    // Validation\n    if (!name || !phone) {\n      showToast(\"Veuillez remplir tous les champs\", \"error\");\n      return null;\n    }\n\n    if (phone.length !== 9 || !/^\\d+$/.test(phone)) {\n      showToast(\"Le numéro doit contenir exactement 9 chiffres\", \"error\");\n      return null;\n    }\n\n    // Récupération des utilisateurs\n    const users = await getChats();\n    const user = users.find(\n      (u) =>\n        u.name.toLowerCase().trim() === name.toLowerCase().trim() &&\n        u.phone.trim() === phone.trim(),\n    );\n\n    if (user) {\n      setCurrentUser(user);\n      showToast(`Bienvenue ${user.name}!`, \"success\");\n      return user;\n    } else {\n      showToast(\"Nom ou téléphone incorrect\", \"error\");\n      return null;\n    }\n  } catch (error) {\n    console.error(\"Erreur de connexion:\", error);\n    showToast(\"Erreur de connexion au serveur\", \"error\");\n    return null;\n  }\n}\n\nexport function createLoginForm(onSuccess) {\n  const container = document.createElement(\"div\");\n  container.className = \"min-h-screen flex items-center justify-center bg-[#111b21] px-4\";\n\n  container.innerHTML = `\n    <div class=\"max-w-md w-full bg-[#222e35] rounded-lg shadow-xl p-8\">\n      <div class=\"text-center mb-8\">\n        <div class=\"w-20 h-20 bg-[#25D366] rounded-full flex items-center justify-center mx-auto mb-4\">\n          <i class=\"fab fa-whatsapp text-3xl text-white\"></i>\n        </div>\n        <h1 class=\"text-2xl font-bold text-white mb-2\">WhatsApp Web</h1>\n        <p class=\"text-gray-400\">Connectez-vous pour continuer</p>\n      </div>\n      \n      <form id=\"loginForm\" class=\"space-y-4\">\n        <div>\n          <input \n            type=\"text\" \n            id=\"nameInput\"\n            placeholder=\"Votre nom\" \n            class=\"w-full px-4 py-3 bg-[#2a3942] rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-[#25D366] transition-all\"\n            required\n          >\n        </div>\n        \n        <div>\n          <input \n            type=\"tel\" \n            id=\"phoneInput\"\n            placeholder=\"Numéro de téléphone (9 chiffres)\" \n            class=\"w-full px-4 py-3 bg-[#2a3942] rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-[#25D366] transition-all\"\n            maxlength=\"9\"\n            required\n          >\n        </div>\n        \n        <button \n          type=\"submit\"\n          id=\"loginButton\"\n          class=\"w-full py-3 bg-[#25D366] hover:bg-[#1ea952] text-white rounded-lg font-medium transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          Se connecter\n        </button>\n      </form>\n      \n      <div class=\"mt-6 p-4 bg-[#2a3942] rounded-lg\">\n        <p class=\"text-sm text-gray-400 mb-2\">Comptes de test :</p>\n        <div class=\"space-y-1 text-xs text-gray-500\">\n          <div>Zafe - 777867740</div>\n          <div>Abdallah - 778123456</div>\n          <div>Ousmane Marra - 776543210</div>\n          <div>Maman Dié ODC - 775555555</div>\n          <div>Zeynabe Ba - 774444444</div>\n        </div>\n      </div>\n    </div>\n  `;\n\n  // Gestionnaires d'événements\n  const form = container.querySelector(\"#loginForm\");\n  const nameInput = container.querySelector(\"#nameInput\");\n  const phoneInput = container.querySelector(\"#phoneInput\");\n  const loginButton = container.querySelector(\"#loginButton\");\n\n  // Validation du téléphone\n  phoneInput.addEventListener(\"input\", (e) => {\n    e.target.value = e.target.value.replace(/[^0-9]/g, \"\");\n  });\n\n  // Soumission du formulaire\n  form.addEventListener(\"submit\", async (e) => {\n    e.preventDefault();\n\n    const name = nameInput.value.trim();\n    const phone = phoneInput.value.trim();\n\n    if (!name || !phone) {\n      showToast(\"Veuillez remplir tous les champs\", \"error\");\n      return;\n    }\n\n    loginButton.disabled = true;\n    loginButton.innerHTML = `\n      <div class=\"flex items-center justify-center\">\n        <div class=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"></div>\n        Connexion...\n      </div>\n    `;\n\n    try {\n      const user = await login(name, phone);\n\n      if (user && onSuccess) {\n        onSuccess(user);\n      }\n    } finally {\n      loginButton.disabled = false;\n      loginButton.textContent = \"Se connecter\";\n    }\n  });\n\n  return container;\n}\n","import { showToast } from \"./notifications.js\"\n\nimport { getCurrentUser } from \"./auth.js\"\n\nlet currentCall = null\nlet callTimeout = null\nlet localStream = null\n\nexport function initializeAudioCall(contact) {\n  if (currentCall) {\n    showToast(\"Un appel est déjà en cours\", \"error\")\n    return\n  }\n  \n  console.log(\"Initialisation appel audio avec:\", contact.name)\n  startCall(contact, 'audio')\n}\n\nexport function initializeVideoCall(contact) {\n  if (currentCall) {\n    showToast(\"Un appel est déjà en cours\", \"error\")\n    return\n  }\n  \n  console.log(\"Initialisation appel vidéo avec:\", contact.name)\n  startCall(contact, 'video')\n}\n\nasync function startCall(contact, type) {\n  currentCall = {\n    contact: contact,\n    type: type,\n    startTime: Date.now(),\n    status: 'calling'\n  }\n  \n\n  // Demander accès à la caméra/micro\n  if (type === 'video') {\n    try {\n      console.log(\"Demande d'accès à la caméra...\")\n      localStream = await navigator.mediaDevices.getUserMedia({ \n\n\n\n\n\n        video: true, \n        audio: true \n      })\n\n      console.log(\"✅ Accès caméra accordé\")\n    } catch (error) {\n\n\n\n\n\n\n\n\n      console.error(\"❌ Erreur accès caméra:\", error)\n      showToast(\"Veuillez autoriser l'accès à la caméra\", \"error\")\n      return\n    }\n\n\n\n\n\n\n\n\n\n\n  }\n  \n  // Créer l'interface d'appel\n  createCallInterface(contact, type)\n  \n  // Si vidéo, configurer immédiatement la caméra locale\n  if (type === 'video' && localStream) {\n    setupLocalVideo()\n  }\n  \n  // Simuler la sonnerie\n  playRingtone()\n  \n\n\n  // Simuler la réponse après 3-5 secondes\n  const responseTime = Math.random() * 3000 + 2000\n  callTimeout = setTimeout(() => {\n    if (currentCall && currentCall.status === 'calling') {\n      answerCall()\n    }\n  }, responseTime)\n}\n\nfunction createCallInterface(contact, type) {\n\n  // Supprimer l'interface existante\n  const existingCall = document.getElementById('callInterface')\n  if (existingCall) {\n    existingCall.remove()\n  }\n  \n  const callInterface = document.createElement('div')\n  callInterface.id = 'callInterface'\n\n  callInterface.className = 'fixed inset-0 bg-gray-900 z-50'\n  \n  if (type === 'video') {\n    callInterface.innerHTML = `\n      <div class=\"w-full h-full relative\">\n        <!-- Vidéo principale (contact) -->\n\n\n\n\n\n\n        <div class=\"w-full h-full bg-gradient-to-br from-gray-800 to-gray-900 flex items-center justify-center relative\">\n          <!-- Placeholder du contact -->\n          <div class=\"text-center\">\n            <img src=\"${contact.avatar}\" alt=\"${contact.name}\" \n\n\n                 class=\"w-32 h-32 rounded-full mb-4 object-cover shadow-2xl mx-auto\">\n            <h2 class=\"text-3xl font-light mb-2 text-white\">${contact.name}</h2>\n            <p id=\"callStatus\" class=\"text-lg text-gray-300\">Appel vidéo en cours...</p>\n          </div>\n        </div>\n        \n\n\n\n        <!-- VOTRE VIDÉO (caméra locale) -->\n        <div class=\"absolute top-4 right-4 w-48 h-36 bg-black rounded-lg overflow-hidden border-2 border-white shadow-xl\">\n          <video id=\"localVideo\" \n                 class=\"w-full h-full object-cover\" \n                 autoplay \n                 muted \n                 playsinline>\n          </video>\n\n\n\n        </div>\n        \n\n        <!-- Contrôles -->\n        <div class=\"absolute bottom-8 left-1/2 transform -translate-x-1/2 flex space-x-6\">\n\n\n          <button id=\"muteBtn\" class=\"w-16 h-16 rounded-full bg-gray-700 hover:bg-gray-600 flex items-center justify-center transition-colors\">\n            <i class=\"fas fa-microphone text-xl text-white\"></i>\n          </button>\n          \n\n\n          <button id=\"cameraBtn\" class=\"w-16 h-16 rounded-full bg-gray-700 hover:bg-gray-600 flex items-center justify-center transition-colors\">\n            <i class=\"fas fa-video text-xl text-white\"></i>\n          </button>\n          \n\n\n          <button id=\"hangupBtn\" class=\"w-16 h-16 rounded-full bg-red-500 hover:bg-red-600 flex items-center justify-center transition-colors\">\n            <i class=\"fas fa-phone text-xl text-white transform rotate-135\"></i>\n          </button>\n        </div>\n        \n\n\n        <!-- Durée -->\n        <div id=\"callDuration\" class=\"absolute top-4 left-4 bg-black bg-opacity-70 px-4 py-2 rounded-full text-white font-mono\">\n          00:00\n        </div>\n      </div>\n    `\n  } else {\n    // Interface appel audio\n    callInterface.innerHTML = `\n\n\n      <div class=\"w-full h-full flex items-center justify-center\">\n        <div class=\"text-center\">\n          <img src=\"${contact.avatar}\" alt=\"${contact.name}\" \n\n\n\n\n\n\n\n\n\n\n               class=\"w-40 h-40 rounded-full mb-6 object-cover shadow-2xl mx-auto\">\n          <h2 class=\"text-4xl font-light mb-4 text-white\">${contact.name}</h2>\n          <p id=\"callStatus\" class=\"text-xl text-gray-300 mb-8\">Appel en cours...</p>\n          \n\n\n\n          <div class=\"flex space-x-8 justify-center\">\n            <button id=\"muteBtn\" class=\"w-16 h-16 rounded-full bg-gray-700 hover:bg-gray-600 flex items-center justify-center transition-colors\">\n              <i class=\"fas fa-microphone text-xl text-white\"></i>\n            </button>\n            \n            <button id=\"speakerBtn\" class=\"w-16 h-16 rounded-full bg-gray-700 hover:bg-gray-600 flex items-center justify-center transition-colors\">\n              <i class=\"fas fa-volume-up text-xl text-white\"></i>\n            </button>\n            \n            <button id=\"hangupBtn\" class=\"w-16 h-16 rounded-full bg-red-500 hover:bg-red-600 flex items-center justify-center transition-colors\">\n              <i class=\"fas fa-phone text-xl text-white transform rotate-135\"></i>\n            </button>\n          </div>\n          \n\n\n\n          <div id=\"callDuration\" class=\"mt-8 text-2xl text-gray-400 font-mono\">00:00</div>\n        </div>\n\n\n      </div>\n    `\n  }\n  \n  document.body.appendChild(callInterface)\n\n\n\n\n\n\n\n\n\n  setupCallControls()\n}\n\nfunction setupLocalVideo() {\n  const localVideo = document.getElementById('localVideo')\n\n  \n  if (localVideo && localStream) {\n\n    console.log(\"🎥 Configuration de votre caméra...\")\n    \n\n    // Assigner directement le stream\n    localVideo.srcObject = localStream\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // Forcer le démarrage\n\n\n    localVideo.play().then(() => {\n      console.log(\"✅ Votre caméra est active\")\n    }).catch(error => {\n      console.error(\"❌ Erreur démarrage caméra:\", error)\n    })\n  } else {\n\n    console.error(\"❌ Vidéo ou stream manquant\")\n  }\n}\n\nfunction setupCallControls() {\n  const muteBtn = document.getElementById('muteBtn')\n  const cameraBtn = document.getElementById('cameraBtn')\n  const speakerBtn = document.getElementById('speakerBtn')\n  const hangupBtn = document.getElementById('hangupBtn')\n  \n  let isMuted = false\n  let cameraOff = false\n\n  \n  // Bouton muet\n  if (muteBtn) {\n    muteBtn.addEventListener('click', () => {\n      isMuted = !isMuted\n      \n      if (localStream) {\n\n\n        localStream.getAudioTracks().forEach(track => {\n          track.enabled = !isMuted\n        })\n      }\n      \n\n      muteBtn.innerHTML = `<i class=\"fas fa-microphone${isMuted ? '-slash' : ''} text-xl text-white\"></i>`\n      muteBtn.classList.toggle('bg-red-500', isMuted)\n\n      showToast(isMuted ? \"🔇 Micro coupé\" : \"🎤 Micro activé\", \"info\")\n    })\n  }\n  \n\n  // Bouton caméra\n  if (cameraBtn) {\n    cameraBtn.addEventListener('click', () => {\n      cameraOff = !cameraOff\n      \n      if (localStream) {\n\n\n        localStream.getVideoTracks().forEach(track => {\n          track.enabled = !cameraOff\n        })\n      }\n      \n\n\n\n\n\n\n\n      cameraBtn.innerHTML = `<i class=\"fas fa-video${cameraOff ? '-slash' : ''} text-xl text-white\"></i>`\n      cameraBtn.classList.toggle('bg-red-500', cameraOff)\n\n      showToast(cameraOff ? \"📹 Caméra désactivée\" : \"🎥 Caméra activée\", \"info\")\n    })\n  }\n  \n\n  // Bouton haut-parleur\n  if (speakerBtn) {\n    speakerBtn.addEventListener('click', () => {\n\n\n\n      showToast(\"🔊 Haut-parleur\", \"info\")\n    })\n  }\n  \n  // Bouton raccrocher\n  if (hangupBtn) {\n    hangupBtn.addEventListener('click', endCall)\n  }\n}\n\n\nfunction answerCall() {\n  if (!currentCall) return\n  \n  currentCall.status = 'connected'\n  currentCall.connectedTime = Date.now()\n  \n\n  stopRingtone()\n  \n\n  const callStatus = document.getElementById('callStatus')\n  if (callStatus) {\n\n    callStatus.textContent = currentCall.type === 'video' ? '📹 Appel vidéo connecté' : '📞 Appel connecté'\n  }\n  \n\n  startCallTimer()\n\n\n\n\n\n\n\n  showToast(\"✅ Appel connecté\", \"success\")\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction startCallTimer() {\n  const durationElement = document.getElementById('callDuration')\n  if (!durationElement || !currentCall) return\n  \n  const updateTimer = () => {\n    if (!currentCall || currentCall.status !== 'connected') return\n    \n    const elapsed = Math.floor((Date.now() - currentCall.connectedTime) / 1000)\n    const minutes = Math.floor(elapsed / 60)\n    const seconds = elapsed % 60\n    \n    durationElement.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`\n  }\n  \n  updateTimer()\n  currentCall.timerInterval = setInterval(updateTimer, 1000)\n}\n\nfunction playRingtone() {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  console.log(\"🔔 Sonnerie...\")\n}\n\nfunction stopRingtone() {\n\n\n  console.log(\"🔕 Arrêt sonnerie\")\n}\n\n\nasync function endCall() {\n  if (!currentCall) return\n  \n  const wasConnected = currentCall.status === 'connected'\n  const duration = wasConnected && currentCall.connectedTime \n    ? Math.floor((Date.now() - currentCall.connectedTime) / 1000)\n    : 0\n  \n  // Nettoyer les timers\n  if (callTimeout) {\n    clearTimeout(callTimeout)\n    callTimeout = null\n  }\n  \n  if (currentCall.timerInterval) {\n    clearInterval(currentCall.timerInterval)\n  }\n  \n\n\n\n\n  // Arrêter la caméra/micro\n  if (localStream) {\n    localStream.getTracks().forEach(track => {\n      track.stop()\n    })\n    localStream = null\n  }\n  \n  // Envoyer message d'appel dans le chat\n  if (wasConnected) {\n    await sendCallMessage(currentCall.contact, currentCall.type, duration)\n  }\n  \n  // Supprimer l'interface\n  const callInterface = document.getElementById('callInterface')\n  if (callInterface) {\n    callInterface.remove()\n  }\n  \n\n  // Message de fin\n  if (duration > 0) {\n    const minutes = Math.floor(duration / 60)\n    const seconds = duration % 60\n\n    showToast(`📞 Appel terminé - ${minutes}:${seconds.toString().padStart(2, '0')}`, \"info\")\n  } else {\n\n    showToast(\"📞 Appel annulé\", \"info\")\n  }\n  \n\n  currentCall = null\n}\n\n\nasync function sendCallMessage(contact, callType, duration) {\n  try {\n    const currentUser = getCurrentUser()\n    if (!currentUser || !window.currentChat) return\n    \n    const minutes = Math.floor(duration / 60)\n    const seconds = duration % 60\n    const durationText = `${minutes}:${seconds.toString().padStart(2, '0')}`\n    \n    const callMessage = {\n      id: Date.now(),\n      senderId: currentUser.id,\n      receiverId: contact.id,\n      text: `${callType === 'video' ? '📹 Appel vidéo' : '📞 Appel vocal'} - ${durationText}`,\n      sent: true,\n      time: new Date().toLocaleTimeString(\"fr-FR\", { hour: \"2-digit\", minute: \"2-digit\" }),\n      timestamp: new Date().toISOString(),\n      type: \"call\",\n      callType: callType,\n      duration: duration,\n      status: \"sent\",\n    }\n    \n    // Ajouter le message au chat\n    if (window.sendMessage) {\n      await window.sendMessage(callMessage)\n    }\n    \n  } catch (error) {\n    console.error(\"Erreur envoi message d'appel:\", error)\n  }\n}\n\nexport function isCallActive() {\n  return currentCall !== null\n}\n\n\nexport function terminateCall() {\n  endCall()\n}\n","const lastMessageCounts = new Map()\nlet syncInterval = null\nlet onNewMessageCallback = null\nlet onUserStatusCallback = null\n\nexport function initializeRealTimeSync(onNewMessage, onUserStatus) {\n  onNewMessageCallback = onNewMessage\n  onUserStatusCallback = onUserStatus\n  \n  // Arrêter l'ancien intervalle s'il existe\n  if (syncInterval) {\n    clearInterval(syncInterval)\n  }\n  \n  // Démarrer la synchronisation toutes les 2 secondes\n  syncInterval = setInterval(checkForUpdates, 2000)\n  console.log(\"Synchronisation temps réel initialisée\")\n}\n\nasync function checkForUpdates() {\n  try {\n    const currentUser = getCurrentUser()\n    if (!currentUser) return\n\n    // Vérifier les nouveaux messages pour tous les chats\n    const response = await fetch('http://localhost:5001/chats')\n    const allChats = await response.json()\n    \n    for (const chat of allChats) {\n      if (chat.id === currentUser.id) continue // Ignorer ses propres données\n      \n      const messages = chat.messages || []\n      const lastCount = lastMessageCounts.get(chat.id) || 0\n      \n      if (messages.length > lastCount) {\n        // Il y a de nouveaux messages\n        const newMessages = messages.slice(lastCount)\n        \n        for (const message of newMessages) {\n          // Vérifier si le message nous est destiné\n          if (message.receiverId === currentUser.id && message.senderId === chat.id) {\n            if (onNewMessageCallback) {\n              onNewMessageCallback(message)\n            }\n          }\n        }\n        \n        lastMessageCounts.set(chat.id, messages.length)\n      }\n    }\n    \n    // Vérifier les statuts utilisateurs\n    if (onUserStatusCallback) {\n      for (const chat of allChats) {\n        if (chat.id !== currentUser.id) {\n          onUserStatusCallback(chat.id, chat.isOnline || false)\n        }\n      }\n    }\n    \n  } catch (error) {\n    console.error(\"Erreur synchronisation temps réel:\", error)\n  }\n}\n\nfunction getCurrentUser() {\n  const userData = localStorage.getItem('currentUser')\n  return userData ? JSON.parse(userData) : null\n}\n\nexport function stopRealTimeSync() {\n  if (syncInterval) {\n    clearInterval(syncInterval)\n    syncInterval = null\n  }\n}\n","import { addMessage, updateChat } from './api.js';\n\nexport async function handleSendMessage(senderId, receiverId, message) {\n  try {\n    // 1. Ajouter le message à l'expéditeur\n    await addMessage(senderId, message)\n    \n    // 2. Créer une copie du message pour le destinataire\n    const receiverMessage = {\n      ...message,\n      sent: false, // Pour le destinataire, c'est un message reçu\n      senderId: senderId,\n      receiverId: receiverId\n    }\n    \n    // 3. Ajouter le message au destinataire\n    await addMessage(receiverId, receiverMessage)\n    \n    // 4. Mettre à jour le dernier message pour les deux utilisateurs\n    const chatUpdate = {\n      lastMessage: message.type === 'text' ? message.text : getMessagePreview(message),\n      time: message.time,\n      lastMessageTime: message.timestamp\n    }\n    \n    await updateChat(senderId, chatUpdate)\n    await updateChat(receiverId, chatUpdate)\n    \n    console.log(\"Message envoyé avec succès\")\n    return true\n    \n  } catch (error) {\n    console.error(\"Erreur envoi message:\", error)\n    throw error\n  }\n}\n\nfunction getMessagePreview(message) {\n  switch (message.type) {\n    case 'image':\n      return '📷 Photo'\n    case 'video':\n      return '🎥 Vidéo'\n    case 'audio':\n      return '🎵 Audio'\n    case 'voice':\n      return '🎤 Message vocal'\n    case 'document':\n      return `📎 ${message.fileName}`\n    default:\n      return message.text\n  }\n}","let mediaRecorder = null\nlet audioChunks = []\nlet isRecording = false\nlet recordingStartTime = null\n\nexport function setupAudioRecorder() {\n  console.log(\"Audio recorder configuré\")\n}\n\nexport async function startVoiceRecording() {\n  try {\n    console.log(\"Démarrage enregistrement vocal...\")\n    \n    // Vérifier si on a un chat actuel\n    if (!window.currentChat) {\n      showToast(\"Sélectionnez une conversation d'abord\", \"error\")\n      return false\n    }\n    \n    // Demander permission microphone\n    const stream = await navigator.mediaDevices.getUserMedia({ \n      audio: {\n        echoCancellation: true,\n        noiseSuppression: true,\n        sampleRate: 44100\n      } \n    })\n    \n    // Créer MediaRecorder avec un format supporté\n    let mimeType = 'audio/webm;codecs=opus'\n    if (!MediaRecorder.isTypeSupported(mimeType)) {\n      mimeType = 'audio/webm'\n      if (!MediaRecorder.isTypeSupported(mimeType)) {\n        mimeType = 'audio/mp4'\n        if (!MediaRecorder.isTypeSupported(mimeType)) {\n          mimeType = '' // Laisser le navigateur choisir\n        }\n      }\n    }\n    \n    mediaRecorder = new MediaRecorder(stream, mimeType ? { mimeType } : {})\n    audioChunks = []\n    recordingStartTime = Date.now()\n    \n    // Événements MediaRecorder\n    mediaRecorder.ondataavailable = (event) => {\n      if (event.data.size > 0) {\n        audioChunks.push(event.data)\n        console.log(\"Données audio reçues:\", event.data.size, \"bytes\")\n      }\n    }\n    \n    mediaRecorder.onstop = async () => {\n      console.log(\"Arrêt enregistrement, traitement...\")\n      \n      // Arrêter le stream\n      stream.getTracks().forEach(track => track.stop())\n      \n      // Vérifier qu'on a des données\n      if (audioChunks.length === 0) {\n        console.error(\"Aucune donnée audio enregistrée\")\n        showToast(\"Erreur: aucune donnée audio\", \"error\")\n        resetVoiceButton()\n        return\n      }\n      \n      // Créer le blob audio\n      const audioBlob = new Blob(audioChunks, { \n        type: mimeType || 'audio/webm' \n      })\n      \n      console.log(\"Blob audio créé:\", audioBlob.size, \"bytes, type:\", audioBlob.type)\n      \n      if (audioBlob.size === 0) {\n        console.error(\"Blob audio vide\")\n        showToast(\"Erreur: enregistrement vide\", \"error\")\n        resetVoiceButton()\n        return\n      }\n      \n      const duration = Math.round((Date.now() - recordingStartTime) / 1000)\n      \n      // Envoyer le message vocal\n      await handleVoiceMessage(audioBlob, duration)\n      \n      // Reset\n      isRecording = false\n      resetVoiceButton()\n    }\n    \n    mediaRecorder.onerror = (event) => {\n      console.error(\"Erreur MediaRecorder:\", event.error)\n      showToast(\"Erreur d'enregistrement\", \"error\")\n      resetVoiceButton()\n    }\n    \n    // Démarrer l'enregistrement\n    mediaRecorder.start(100) // Collecter les données toutes les 100ms\n    isRecording = true\n    \n    // Mettre à jour l'interface\n    updateVoiceButton(true)\n    showToast(\"🎤 Enregistrement en cours...\", \"info\")\n    \n    return true\n    \n  } catch (error) {\n    console.error(\"Erreur accès microphone:\", error)\n    \n    if (error.name === 'NotAllowedError') {\n      showToast(\"Veuillez autoriser l'accès au microphone\", \"error\")\n    } else if (error.name === 'NotFoundError') {\n      showToast(\"Aucun microphone détecté\", \"error\")\n    } else {\n      showToast(\"Erreur d'enregistrement vocal\", \"error\")\n    }\n    \n    resetVoiceButton()\n    return false\n  }\n}\n\nexport function stopVoiceRecording() {\n  if (mediaRecorder && isRecording) {\n    console.log(\"Arrêt de l'enregistrement...\")\n    mediaRecorder.stop()\n    showToast(\"📤 Envoi du message vocal...\", \"info\")\n  }\n}\n\nfunction updateVoiceButton(recording) {\n  const voiceBtn = document.getElementById(\"voiceBtn\")\n  if (voiceBtn) {\n    if (recording) {\n      voiceBtn.innerHTML = '<i class=\"fas fa-stop text-xl text-red-500\"></i>'\n      voiceBtn.classList.add('recording', 'animate-pulse')\n    } else {\n      voiceBtn.innerHTML = '<i class=\"fas fa-microphone text-xl\"></i>'\n      voiceBtn.classList.remove('recording', 'animate-pulse')\n    }\n  }\n}\n\nfunction resetVoiceButton() {\n  updateVoiceButton(false)\n  isRecording = false\n}\n\nasync function handleVoiceMessage(audioBlob, duration) {\n  try {\n    const currentUser = getCurrentUser()\n    const currentChat = window.currentChat\n    \n    if (!currentUser || !currentChat) {\n      showToast(\"Erreur: utilisateur ou chat non défini\", \"error\")\n      return\n    }\n    \n    console.log(\"Traitement message vocal...\")\n    console.log(\"Blob size:\", audioBlob.size, \"Duration:\", duration)\n    \n    // Convertir en base64\n    const base64Audio = await blobToBase64(audioBlob)\n    \n    if (!base64Audio || base64Audio === 'data:') {\n      console.error(\"Erreur conversion base64\")\n      showToast(\"Erreur de traitement audio\", \"error\")\n      return\n    }\n    \n    console.log(\"Base64 créé, taille:\", base64Audio.length)\n    \n    const message = {\n      id: Date.now(),\n      senderId: currentUser.id,\n      receiverId: currentChat.id,\n      text: \"Message vocal\",\n      sent: true,\n      time: new Date().toLocaleTimeString(\"fr-FR\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      }),\n      timestamp: new Date().toISOString(),\n      type: \"voice\",\n      fileData: base64Audio,\n      duration: duration,\n      status: \"sent\",\n    }\n    \n    // Envoyer le message\n    if (window.sendVoiceMessage) {\n      await window.sendVoiceMessage(message)\n      showToast(\"✅ Message vocal envoyé\", \"success\")\n    } else {\n      console.error(\"Fonction sendVoiceMessage non trouvée\")\n      showToast(\"Erreur: fonction d'envoi non disponible\", \"error\")\n    }\n    \n  } catch (error) {\n    console.error(\"Erreur traitement message vocal:\", error)\n    showToast(\"Erreur lors de l'envoi du message vocal\", \"error\")\n  }\n}\n\nfunction blobToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onloadend = () => {\n      const result = reader.result\n      console.log(\"Base64 conversion result:\", result ? result.substring(0, 50) + \"...\" : \"null\")\n      resolve(result)\n    }\n    reader.onerror = (error) => {\n      console.error(\"Erreur lecture fichier:\", error)\n      reject(error)\n    }\n    reader.readAsDataURL(blob)\n  })\n}\n\nfunction getCurrentUser() {\n  const userData = localStorage.getItem('currentUser')\n  return userData ? JSON.parse(userData) : null\n}\n\nfunction showToast(message, type) {\n  console.log(`[${type.toUpperCase()}] ${message}`)\n  \n  // Créer une notification toast simple\n  const toast = document.createElement('div')\n  toast.className = `fixed top-4 right-4 px-4 py-2 rounded-lg text-white z-50 transition-all duration-300 ${\n    type === 'success' ? 'bg-green-500' : \n    type === 'error' ? 'bg-red-500' : 'bg-blue-500'\n  }`\n  toast.textContent = message\n  \n  document.body.appendChild(toast)\n  \n  setTimeout(() => {\n    toast.style.opacity = '0'\n    setTimeout(() => {\n      if (toast.parentNode) {\n        toast.parentNode.removeChild(toast)\n      }\n    }, 300)\n  }, 3000)\n}\n\nexport function isCurrentlyRecording() {\n  return isRecording\n}\n","import { getCurrentUser, createLoginForm, logout } from \"./utils/auth.js\"\nimport { getChats, updateChat, addMessage, getMessages } from \"./utils/api.js\"\nimport { showToast, showNotification, requestNotificationPermission } from \"./utils/notifications.js\"\nimport { initializeAudioCall, initializeVideoCall } from \"./utils/calls.js\"\nimport { initializeRealTimeSync } from \"./utils/realtime.js\"\nimport { handleSendMessage } from \"./utils/chat-handler.js\"\nimport { setupAudioRecorder } from \"./utils/audio-recorder.js\"\n\nlet chats = []\nlet currentChat = null\n// Rendre currentChat accessible globalement pour les modules\nwindow.currentChat = null\nconst realTimeInterval = null\nconst typingTimeout = null\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  console.log(\"Application démarrée\")\n  initApp()\n})\n\nasync function initApp() {\n  const mainContainer = document.getElementById(\"mainContainer\")\n  const loginContainer = document.getElementById(\"loginContainer\")\n\n  // Vérifier l'utilisateur connecté\n  const currentUser = getCurrentUser()\n\n  if (!currentUser) {\n    console.log(\"Aucun utilisateur connecté\")\n    showLoginForm()\n  } else {\n    console.log(\"Utilisateur connecté:\", currentUser.name)\n    showMainApp()\n  }\n\n  function showLoginForm() {\n    mainContainer.style.display = \"none\"\n    loginContainer.style.display = \"block\"\n    loginContainer.innerHTML = \"\"\n\n    const loginForm = createLoginForm((user) => {\n      console.log(\"Connexion réussie pour:\", user.name)\n      showMainApp()\n    })\n\n    loginContainer.appendChild(loginForm)\n  }\n\n  function showMainApp() {\n    loginContainer.style.display = \"none\"\n    mainContainer.style.display = \"flex\"\n    initMainInterface()\n  }\n}\n\nasync function initMainInterface() {\n  try {\n    await loadChats()\n    setupEventListeners()\n    updateUserAvatar()\n    showWelcomeMessage()\n    initializeRealTimeSync(handleNewMessage, handleUserStatusUpdate)\n    startAutoRefresh() // Ajoutez cette ligne\n    setupAudioRecorder()\n    console.log(\"Interface principale initialisée\")\n  } catch (error) {\n    console.error(\"Erreur initialisation:\", error)\n    showToast(\"Erreur de chargement\", \"error\")\n  }\n}\n\nasync function loadChats() {\n  try {\n    chats = await getChats()\n    renderChatList()\n\n    // Si un chat est actuellement ouvert, rafraîchir ses messages\n    if (currentChat) {\n      const messages = await getMessages(currentChat.id)\n      renderMessages(messages)\n    }\n  } catch (error) {\n    console.error(\"Erreur chargement chats:\", error)\n    showToast(\"Impossible de charger les conversations\", \"error\")\n  }\n}\n\nfunction setupEventListeners() {\n  // Avatar utilisateur pour ouvrir le profil\n  const userAvatarButton = document.getElementById(\"userAvatarButton\")\n  if (userAvatarButton) {\n    userAvatarButton.addEventListener(\"click\", showProfile)\n  }\n\n  // Bouton retour du profil\n  const backToChats = document.getElementById(\"backToChats\")\n  if (backToChats) {\n    backToChats.addEventListener(\"click\", hideProfile)\n  }\n\n  // Bouton de déconnexion\n  const logoutButton = document.getElementById(\"logoutButton\")\n  if (logoutButton) {\n    logoutButton.addEventListener(\"click\", logout)\n  }\n\n  // Bouton retour\n  const backButton = document.getElementById(\"backButton\")\n  if (backButton) {\n    backButton.addEventListener(\"click\", handleBackButton)\n  }\n\n  // Input de message\n  setupMessageInput()\n\n  // Navigation\n  setupNavigation()\n\n  // Search\n  setupSearch()\n\n  // Filter tabs\n  setupFilterTabs()\n\n  // Call buttons\n  setupCallButtons()\n\n  // File attachment\n  setupFileAttachment()\n\n  // Responsive\n  window.addEventListener(\"resize\", handleResize)\n\n  // Notifications permission\n  requestNotificationPermission()\n\n  // Voice recording\n  setupVoiceRecording()\n}\n\nfunction setupSearch() {\n  const searchInput = document.getElementById(\"searchInput\")\n  if (searchInput) {\n    searchInput.addEventListener(\"input\", (e) => {\n      const query = e.target.value.toLowerCase().trim()\n      filterChats(query)\n    })\n  }\n}\n\nfunction setupFilterTabs() {\n  const filterTabs = document.querySelectorAll(\".filter-tab\")\n  filterTabs.forEach((tab) => {\n    tab.addEventListener(\"click\", () => {\n      // Remove active class from all tabs\n      filterTabs.forEach((t) => {\n        t.classList.remove(\"active\", \"bg-green-600\", \"text-white\")\n        t.classList.add(\"text-gray-400\")\n      })\n\n      // Add active class to clicked tab\n      tab.classList.add(\"active\", \"bg-green-600\", \"text-white\")\n      tab.classList.remove(\"text-gray-400\")\n\n      const filter = tab.dataset.filter\n      applyFilter(filter)\n    })\n  })\n}\n\nfunction setupCallButtons() {\n  const voiceCallBtn = document.getElementById(\"voiceCallBtn\")\n  const videoCallBtn = document.getElementById(\"videoCallBtn\")\n\n  if (voiceCallBtn) {\n    voiceCallBtn.addEventListener(\"click\", () => {\n      if (currentChat) {\n        initializeAudioCall(currentChat)\n      }\n    })\n  }\n\n  if (videoCallBtn) {\n    videoCallBtn.addEventListener(\"click\", () => {\n      if (currentChat) {\n        initializeVideoCall(currentChat)\n      }\n    })\n  }\n}\n\nfunction setupFileAttachment() {\n  const attachBtn = document.getElementById(\"attachBtn\")\n  const fileInput = document.getElementById(\"fileInput\")\n\n  if (attachBtn && fileInput) {\n    attachBtn.addEventListener(\"click\", () => {\n      fileInput.click()\n    })\n\n    fileInput.addEventListener(\"change\", handleFileUpload)\n  }\n}\n\nasync function handleFileUpload(event) {\n  const file = event.target.files[0]\n  if (!file || !currentChat) return\n\n  try {\n    // Convert file to base64\n    const base64 = await fileToBase64(file)\n\n    const message = {\n      id: Date.now(),\n      text: file.name,\n      sent: true,\n      time: new Date().toLocaleTimeString(\"fr-FR\", { hour: \"2-digit\", minute: \"2-digit\" }),\n      timestamp: new Date().toISOString(),\n      type: getFileType(file.type),\n      fileData: base64,\n      fileName: file.name,\n      fileSize: file.size,\n      status: \"sent\",\n    }\n\n    await sendMessage(message)\n    event.target.value = \"\" // Reset file input\n  } catch (error) {\n    console.error(\"Erreur upload fichier:\", error)\n    showToast(\"Erreur lors de l'envoi du fichier\", \"error\")\n  }\n}\n\nfunction fileToBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onload = () => resolve(reader.result)\n    reader.onerror = (error) => reject(error)\n  })\n}\n\nfunction getFileType(mimeType) {\n  if (mimeType.startsWith(\"image/\")) return \"image\"\n  if (mimeType.startsWith(\"video/\")) return \"video\"\n  if (mimeType.startsWith(\"audio/\")) return \"audio\"\n  return \"document\"\n}\n\nfunction filterChats(query) {\n  const chatItems = document.querySelectorAll(\".chat-item\")\n  chatItems.forEach((item) => {\n    const name = item.querySelector(\".chat-name\")?.textContent.toLowerCase() || \"\"\n    const message = item.querySelector(\".chat-message\")?.textContent.toLowerCase() || \"\"\n\n    if (name.includes(query) || message.includes(query)) {\n      item.style.display = \"block\"\n    } else {\n      item.style.display = \"none\"\n    }\n  })\n}\n\nfunction applyFilter(filter) {\n  const currentUser = getCurrentUser()\n  if (!currentUser) return\n\n  let filteredChats = chats.filter((chat) => chat.id !== currentUser.id)\n\n  switch (filter) {\n    case \"unread\":\n      filteredChats = filteredChats.filter((chat) => chat.unread > 0)\n      break\n    case \"favorites\":\n      filteredChats = filteredChats.filter((chat) => chat.isFavorite)\n      break\n    case \"groups\":\n      filteredChats = filteredChats.filter((chat) => chat.isGroup)\n      break\n    default:\n      // \"all\" - no additional filtering\n      break\n  }\n\n  renderFilteredChatList(filteredChats)\n}\n\nfunction renderFilteredChatList(filteredChats) {\n  const chatList = document.getElementById(\"chatList\")\n  if (!chatList) return\n\n  chatList.innerHTML = \"\"\n\n  filteredChats.forEach((chat) => {\n    const chatItem = createChatItem(chat)\n    chatList.appendChild(chatItem)\n  })\n}\n\nfunction showProfile() {\n  const sidebar = document.getElementById(\"sidebar\")\n  const profilePanel = document.getElementById(\"profilePanel\")\n  const chatArea = document.getElementById(\"chatArea\")\n\n  // Cacher la sidebar et la zone de chat\n  sidebar.style.display = \"none\"\n  chatArea.style.display = \"none\"\n\n  // Afficher le panneau de profil\n  profilePanel.style.display = \"flex\"\n\n  // Mettre à jour les informations du profil\n  updateProfileInfo()\n}\n\nfunction hideProfile() {\n  const sidebar = document.getElementById(\"sidebar\")\n  const profilePanel = document.getElementById(\"profilePanel\")\n  const chatArea = document.getElementById(\"chatArea\")\n\n  // Cacher le panneau de profil\n  profilePanel.style.display = \"none\"\n\n  // Réafficher la sidebar\n  sidebar.style.display = \"flex\"\n\n  // Réafficher la zone de chat si un chat était ouvert\n  if (currentChat) {\n    chatArea.style.display = \"flex\"\n  }\n}\n\nfunction updateProfileInfo() {\n  const currentUser = getCurrentUser()\n  if (currentUser) {\n    const profileImage = document.getElementById(\"profileImage\")\n    const profileName = document.getElementById(\"profileName\")\n\n    if (profileImage) {\n      profileImage.src = currentUser.avatar\n      profileImage.alt = currentUser.name\n    }\n\n    if (profileName) {\n      profileName.textContent = currentUser.name\n    }\n  }\n}\n\nfunction updateUserAvatar() {\n  const currentUser = getCurrentUser()\n  const userAvatars = document.querySelectorAll(\".user-avatar img\")\n\n  if (currentUser && userAvatars.length > 0) {\n    userAvatars.forEach((avatar) => {\n      avatar.src = currentUser.avatar\n      avatar.alt = currentUser.name\n    })\n  }\n}\n\nfunction showWelcomeMessage() {\n  const messagesArea = document.getElementById(\"messagesArea\")\n  if (messagesArea) {\n    messagesArea.innerHTML = `\n      <div class=\"flex items-center justify-center h-full text-gray-500\">\n        <div class=\"text-center\">\n          <div class=\"text-8xl mb-4 opacity-30\">\n            <i class=\"fab fa-whatsapp text-green-500\"></i>\n          </div>\n          <h2 class=\"text-3xl mb-4 font-light\">WhatsApp Web</h2>\n          <p class=\"text-gray-400 mb-2\">Sélectionnez une conversation pour commencer</p>\n          <div class=\"mt-8 flex justify-center\">\n            <div class=\"flex items-center text-gray-500 text-sm\">\n              <i class=\"fas fa-lock mr-2\"></i>\n              <span>Vos messages sont chiffrés de bout en bout</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    `\n  }\n}\n\nfunction renderChatList() {\n  const chatList = document.getElementById(\"chatList\")\n  if (!chatList) return\n\n  const currentUser = getCurrentUser()\n  if (!currentUser) return\n\n  chatList.innerHTML = \"\"\n\n  // Filtrer les chats (exclure l'utilisateur actuel)\n  const filteredChats = chats.filter((chat) => chat.id !== currentUser.id)\n\n  // Trier par dernière activité\n  filteredChats.sort((a, b) => {\n    const timeA = new Date(a.lastMessageTime || a.time)\n    const timeB = new Date(b.lastMessageTime || b.time)\n    return timeB - timeA\n  })\n\n  filteredChats.forEach((chat) => {\n    const chatItem = createChatItem(chat)\n    chatList.appendChild(chatItem)\n  })\n}\n\nfunction createChatItem(chat) {\n  const chatItem = document.createElement(\"div\")\n  chatItem.className =\n    \"chat-item px-4 py-3 cursor-pointer hover:bg-[#202c33] transition-colors border-b border-gray-700\"\n  chatItem.dataset.chatId = chat.id\n\n  const hasUnread = chat.unread > 0\n  const isOnline = chat.isOnline\n\n  chatItem.innerHTML = `\n    <div class=\"flex items-center space-x-3\">\n      <div class=\"relative\">\n        <img src=\"${chat.avatar}\" alt=\"${chat.name}\" class=\"w-12 h-12 rounded-full object-cover\">\n        ${isOnline ? '<div class=\"absolute bottom-0 right-0 w-3 h-3 bg-green-500 rounded-full border-2 border-[#222e35]\"></div>' : \"\"}\n      </div>\n      <div class=\"flex-1 min-w-0\">\n        <div class=\"flex justify-between items-start\">\n          <h3 class=\"chat-name font-medium text-white truncate ${hasUnread ? \"font-semibold\" : \"\"}\">${chat.name}</h3>\n          <div class=\"flex flex-col items-end space-y-1\">\n            <span class=\"text-xs ${hasUnread ? \"text-green-400\" : \"text-gray-400\"}\">${chat.time}</span>\n            ${hasUnread ? `<span class=\"bg-green-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center font-medium\">${chat.unread}</span>` : \"\"}\n          </div>\n        </div>\n        <div class=\"mt-1\">\n          <p class=\"chat-message text-sm ${hasUnread ? \"text-white font-medium\" : \"text-gray-400\"} truncate\">${chat.lastMessage}</p>\n        </div>\n      </div>\n    </div>\n  `\n\n  chatItem.addEventListener(\"click\", () => openChat(chat.id))\n\n  return chatItem\n}\n\nasync function openChat(chatId) {\n  hideProfile()\n\n  currentChat = chats.find((chat) => chat.id === chatId)\n  window.currentChat = currentChat // Ajouter cette ligne\n\n  if (!currentChat) return\n\n  // Marquer comme lu\n  if (currentChat.unread > 0) {\n    currentChat.unread = 0\n    await updateChat(currentChat)\n  }\n\n  // Mise à jour visuelle\n  document.querySelectorAll(\".chat-item\").forEach((item) => {\n    item.classList.remove(\"bg-[#202c33]\")\n  })\n  document.querySelector(`[data-chat-id=\"${chatId}\"]`)?.classList.add(\"bg-[#202c33]\")\n\n  // Responsive\n  if (isMobile()) {\n    document.getElementById(\"sidebar\").style.display = \"none\"\n    document.getElementById(\"chatArea\").style.display = \"flex\"\n  } else {\n    document.getElementById(\"chatArea\").style.display = \"flex\"\n  }\n\n  showChatHeader()\n  await renderMessages()\n  showMessageInput()\n  renderChatList()\n}\n\nfunction showChatHeader() {\n  const chatHeader = document.getElementById(\"chatHeader\")\n  const chatAvatar = document.getElementById(\"chatAvatar\")\n  const chatName = document.getElementById(\"chatName\")\n  const chatStatus = document.getElementById(\"chatStatus\")\n\n  if (chatHeader && currentChat) {\n    chatHeader.style.display = \"flex\"\n    chatAvatar.innerHTML = `<img src=\"${currentChat.avatar}\" alt=\"${currentChat.name}\" class=\"w-10 h-10 rounded-full object-cover\">`\n    chatName.textContent = currentChat.name\n    chatStatus.textContent = currentChat.isOnline ? \"en ligne\" : currentChat.status\n  }\n}\n\nasync function renderMessages() {\n  const messagesArea = document.getElementById(\"messagesArea\")\n  if (!messagesArea || !currentChat) return\n\n  try {\n    // Récupérer les messages depuis l'API\n    const messages = await getMessages(currentChat.id)\n    currentChat.messages = messages\n\n    messagesArea.innerHTML = \"\"\n\n    messages.forEach((message) => {\n      const messageElement = createMessageElement(message)\n      messagesArea.appendChild(messageElement)\n    })\n\n    messagesArea.scrollTop = messagesArea.scrollHeight\n  } catch (error) {\n    console.error(\"Erreur lors du rendu des messages:\", error)\n    showToast(\"Erreur lors du chargement des messages\", \"error\")\n  }\n}\n\nfunction createMessageElement(message) {\n  const currentUser = getCurrentUser()\n  const isSentByMe = message.senderId === currentUser.id || message.sent === true\n\n  const messageDiv = document.createElement(\"div\")\n  messageDiv.className = `flex mb-4 ${isSentByMe ? \"justify-end\" : \"justify-start\"}`\n  messageDiv.dataset.messageId = message.id\n\n  let messageContent = \"\"\n\n  switch (message.type) {\n    case \"image\":\n      messageContent = `\n        <img src=\"${message.fileData}\" alt=\"${message.fileName}\" class=\"max-w-xs rounded-lg mb-2 cursor-pointer\" onclick=\"openImageModal('${message.fileData}')\">\n        <p class=\"text-sm\">${message.text}</p>\n      `\n      break\n    case \"video\":\n      messageContent = `\n        <video src=\"${message.fileData}\" controls class=\"max-w-xs rounded-lg mb-2\">\n          Votre navigateur ne supporte pas la lecture vidéo.\n        </video>\n        <p class=\"text-sm\">${message.text}</p>\n      `\n      break\n    case \"audio\":\n      messageContent = `\n        <audio src=\"${message.fileData}\" controls class=\"mb-2\">\n          Votre navigateur ne supporte pas la lecture audio.\n        </audio>\n        <p class=\"text-sm\">${message.text}</p>\n      `\n      break\n    case \"document\":\n      messageContent = `\n        <div class=\"flex items-center space-x-2 mb-2 p-2 bg-gray-700 rounded\">\n          <i class=\"fas fa-file text-blue-400\"></i>\n          <div>\n            <p class=\"text-sm font-medium\">${message.fileName}</p>\n            <p class=\"text-xs text-gray-400\">${formatFileSize(message.fileSize)}</p>\n          </div>\n        </div>\n      `\n      break\n    case \"voice\":\n      messageContent = `\n        <div class=\"voice-message flex items-center gap-3 p-3 min-w-[200px]\">\n          <button class=\"play-button w-10 h-10 rounded-full bg-green-500 hover:bg-green-600 flex items-center justify-center text-white transition-colors\">\n            <i class=\"fas fa-play text-sm\"></i>\n          </button>\n          <div class=\"voice-content flex-1\">\n            <div class=\"voice-waveform flex items-center gap-1 h-6 mb-1\">\n              ${Array(25)\n                .fill()\n                .map(\n                  (_, i) => `\n                <div class=\"waveform-bar bg-gray-400 rounded-full transition-all duration-200\" \n                     style=\"width: 2px; height: ${Math.random() * 16 + 4}px;\"></div>\n              `,\n                )\n                .join(\"\")}\n            </div>\n            <div class=\"flex justify-between items-center\">\n              <span class=\"duration text-xs text-gray-300\">0:05</span>\n            </div>\n          </div>\n        </div>\n      `\n\n      // Ajouter la gestion audio après le rendu\n      setTimeout(() => {\n        const messageEl = document.querySelector(`[data-message-id=\"${message.id}\"]`)\n        if (messageEl) {\n          const playButton = messageEl.querySelector(\".play-button\")\n          const waveformBars = messageEl.querySelectorAll(\".waveform-bar\")\n          const duration = messageEl.querySelector(\".duration\")\n          let isPlaying = false\n          let animationInterval = null\n          let audio = null\n\n          // Fonction pour créer l'audio à partir des données base64\n          function createAudioFromBase64() {\n            if (!message.fileData) {\n              console.error(\"Pas de données audio disponibles\")\n              return null\n            }\n\n            try {\n              // Créer un nouvel élément audio\n              audio = new Audio()\n              audio.src = message.fileData\n              audio.preload = \"metadata\"\n\n              // Gérer les erreurs de chargement\n              audio.onerror = (e) => {\n                console.error(\"Erreur chargement audio:\", e)\n                duration.textContent = \"Erreur\"\n              }\n\n              // Quand les métadonnées sont chargées\n              audio.onloadedmetadata = () => {\n                if (audio.duration && !isNaN(audio.duration) && isFinite(audio.duration)) {\n                  duration.textContent = formatTime(audio.duration)\n                } else {\n                  // Durée par défaut si impossible à déterminer\n                  duration.textContent = \"0:05\"\n                }\n              }\n\n              // Gestion de la fin de lecture\n              audio.onended = () => {\n                isPlaying = false\n                playButton.innerHTML = '<i class=\"fas fa-play text-sm\"></i>'\n                clearInterval(animationInterval)\n                waveformBars.forEach((bar) => {\n                  bar.style.backgroundColor = \"#9ca3af\"\n                })\n              }\n\n              // Gestion des erreurs de lecture\n              audio.onpause = () => {\n                isPlaying = false\n                playButton.innerHTML = '<i class=\"fas fa-play text-sm\"></i>'\n                clearInterval(animationInterval)\n              }\n\n              return audio\n            } catch (error) {\n              console.error(\"Erreur création audio:\", error)\n              return null\n            }\n          }\n\n          playButton.onclick = async () => {\n            try {\n              if (!audio) {\n                audio = createAudioFromBase64()\n                if (!audio) {\n                  showToast(\"Impossible de lire le message vocal\", \"error\")\n                  return\n                }\n              }\n\n              if (isPlaying) {\n                audio.pause()\n                playButton.innerHTML = '<i class=\"fas fa-play text-sm\"></i>'\n                clearInterval(animationInterval)\n                // Reset waveform\n                waveformBars.forEach((bar) => {\n                  bar.style.backgroundColor = \"#9ca3af\"\n                })\n                isPlaying = false\n              } else {\n                // Essayer de jouer l'audio\n                try {\n                  await audio.play()\n                  playButton.innerHTML = '<i class=\"fas fa-pause text-sm\"></i>'\n                  isPlaying = true\n\n                  // Animer les barres\n                  animationInterval = setInterval(() => {\n                    waveformBars.forEach((bar) => {\n                      const height = Math.random() * 16 + 4\n                      bar.style.height = `${height}px`\n                      bar.style.backgroundColor = \"#10b981\"\n                    })\n                  }, 100)\n                } catch (playError) {\n                  console.error(\"Erreur lecture:\", playError)\n                  showToast(\"Erreur de lecture audio\", \"error\")\n                  playButton.innerHTML = '<i class=\"fas fa-play text-sm\"></i>'\n                  isPlaying = false\n                }\n              }\n            } catch (error) {\n              console.error(\"Erreur gestion lecture:\", error)\n              showToast(\"Erreur de lecture audio\", \"error\")\n              playButton.innerHTML = '<i class=\"fas fa-play text-sm\"></i>'\n              isPlaying = false\n            }\n          }\n\n          // Initialiser l'audio\n          createAudioFromBase64()\n        }\n      }, 100)\n      break\n    default:\n      messageContent = `<p class=\"text-sm\">${message.text}</p>`\n  }\n\n  messageDiv.innerHTML = `\n  <div class=\"max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\n    isSentByMe ? \"bg-[#005c4b] text-white\" : \"bg-[#202c33] text-white\"\n  } shadow-md\">\n    ${messageContent}\n    <div class=\"flex justify-end items-center mt-1 space-x-1\">\n      <span class=\"text-xs text-gray-300\">${message.time}</span>\n      ${isSentByMe ? `<i class=\"fas fa-check-double text-xs ${message.status === \"read\" ? \"text-blue-400\" : \"text-gray-400\"}\"></i>` : \"\"}\n    </div>\n  </div>\n`\n\n  return messageDiv\n}\n\nfunction formatFileSize(bytes) {\n  if (bytes === 0) return \"0 Bytes\"\n  const k = 1024\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"]\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  return Number.parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i]\n}\n\nfunction showMessageInput() {\n  const messageInput = document.getElementById(\"messageInput\")\n  if (messageInput) {\n    messageInput.style.display = \"flex\"\n  }\n}\n\nfunction setupMessageInput() {\n  const messageText = document.getElementById(\"messageText\")\n  const sendButton = document.getElementById(\"sendButton\")\n  const voiceBtn = document.getElementById(\"voiceBtn\")\n\n  if (!messageText || !sendButton) return\n\n  async function sendTextMessage() {\n    const text = messageText.value.trim()\n    if (!text || !currentChat) return\n\n    try {\n      const currentUser = getCurrentUser()\n      if (!currentUser) return\n\n      const message = {\n        id: Date.now(),\n        senderId: currentUser.id,\n        receiverId: currentChat.id,\n        text: text,\n        sent: true,\n        time: new Date().toLocaleTimeString(\"fr-FR\", { hour: \"2-digit\", minute: \"2-digit\" }),\n        timestamp: new Date().toISOString(),\n        type: \"text\",\n        status: \"sent\",\n      }\n\n      // Vider le champ de message immédiatement\n      messageText.value = \"\"\n\n      // Ajouter le message localement pour l'affichage immédiat\n      currentChat.messages = currentChat.messages || []\n      currentChat.messages.push(message)\n      currentChat.lastMessage = text\n      currentChat.time = message.time\n      currentChat.lastMessageTime = message.timestamp\n\n      // Envoyer au serveur\n      await handleSendMessage(currentUser.id, currentChat.id, message)\n    } catch (error) {\n      console.error(\"Erreur envoi message:\", error)\n      showToast(\"Erreur lors de l'envoi\", \"error\")\n    }\n  }\n\n  sendButton.addEventListener(\"click\", sendTextMessage)\n  messageText.addEventListener(\"keypress\", (e) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault()\n      sendTextMessage()\n    }\n  })\n\n  // Voice message\n  if (voiceBtn) {\n    voiceBtn.addEventListener(\"click\", startVoiceRecording)\n  }\n}\n\nasync function sendMessage(message) {\n  if (!currentChat) return\n\n  try {\n    currentChat.messages.push(message)\n    currentChat.lastMessage = message.type === \"text\" ? message.text : `📎 ${message.fileName || \"Fichier\"}`\n    currentChat.time = message.time\n    currentChat.lastMessageTime = message.timestamp\n\n    await addMessage(currentChat.id, message)\n    await updateChat(currentChat)\n\n    renderMessages()\n    renderChatList()\n  } catch (error) {\n    console.error(\"Erreur envoi message:\", error)\n    showToast(\"Erreur lors de l'envoi\", \"error\")\n  }\n}\n\nfunction handleBackButton() {\n  if (isMobile()) {\n    document.getElementById(\"sidebar\").style.display = \"flex\"\n    document.getElementById(\"chatArea\").style.display = \"none\"\n  }\n\n  currentChat = null\n  window.currentChat = null // Ajouter cette ligne\n  document.getElementById(\"chatHeader\").style.display = \"none\"\n  document.getElementById(\"messageInput\").style.display = \"none\"\n  showWelcomeMessage()\n}\n\nfunction setupNavigation() {\n  const navItems = document.querySelectorAll(\".nav-item\")\n  navItems.forEach((item) => {\n    item.addEventListener(\"click\", () => {\n      const view = item.dataset.view\n      console.log(\"Navigation vers:\", view)\n\n      // Remove active class from all nav items\n      navItems.forEach((nav) => nav.classList.remove(\"active\"))\n\n      // Add active class to clicked item\n      item.classList.add(\"active\")\n\n      // Handle navigation\n      switch (view) {\n        case \"chats\":\n          // Already handled by default\n          break\n        case \"status\":\n          showToast(\"Fonctionnalité Statuts bientôt disponible\", \"info\")\n          break\n        case \"communities\":\n          showToast(\"Fonctionnalité Communautés bientôt disponible\", \"info\")\n          break\n        case \"settings\":\n          showToast(\"Fonctionnalité Paramètres bientôt disponible\", \"info\")\n          break\n      }\n    })\n  })\n}\n\nfunction handleResize() {\n  if (!isMobile() && currentChat) {\n    document.getElementById(\"sidebar\").style.display = \"flex\"\n    document.getElementById(\"chatArea\").style.display = \"flex\"\n  }\n}\n\nfunction isMobile() {\n  return window.innerWidth < 768\n}\n\n// Voice recording functions\nlet mediaRecorder = null\nlet audioChunks = []\n\nasync function startVoiceRecording() {\n  try {\n    if (!currentChat) {\n      showToast(\"Sélectionnez une conversation d'abord\", \"error\")\n      return\n    }\n\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true })\n    mediaRecorder = new MediaRecorder(stream)\n    audioChunks = []\n\n    mediaRecorder.ondataavailable = (event) => {\n      audioChunks.push(event.data)\n    }\n\n    mediaRecorder.onstop = async () => {\n      const audioBlob = new Blob(audioChunks, { type: \"audio/mp3\" })\n      await handleVoiceMessage(audioBlob, currentChat)\n      stream.getTracks().forEach((track) => track.stop())\n    }\n\n    mediaRecorder.start()\n    showToast(\"Enregistrement en cours... Cliquez à nouveau pour arrêter\", \"info\")\n\n    const voiceBtn = document.getElementById(\"voiceBtn\")\n    voiceBtn.innerHTML = '<i class=\"fas fa-stop text-xl text-red-500\"></i>'\n    voiceBtn.onclick = stopVoiceRecording\n  } catch (error) {\n    console.error(\"Erreur enregistrement vocal:\", error)\n    showToast(\"Impossible d'accéder au microphone\", \"error\")\n  }\n}\n\nfunction stopVoiceRecording() {\n  if (mediaRecorder && mediaRecorder.state === \"recording\") {\n    mediaRecorder.stop()\n\n    // Reset button\n    const voiceBtn = document.getElementById(\"voiceBtn\")\n    voiceBtn.innerHTML = '<i class=\"fas fa-microphone text-xl\"></i>'\n    voiceBtn.onclick = startVoiceRecording\n\n    showToast(\"Message vocal envoyé\", \"success\")\n  }\n}\n\nfunction createVoiceMessage(audioBlob, currentUser, isSent = true) {\n  const container = document.createElement(\"div\")\n  container.className = `voice-message-container ${isSent ? \"sent\" : \"received\"}`\n\n  const audioUrl = URL.createObjectURL(audioBlob)\n  const audio = new Audio(audioUrl)\n\n  container.innerHTML = `\n    <div class=\"voice-message\">\n      ${\n        !isSent\n          ? `\n        <div class=\"voice-avatar\">\n          <img src=\"${currentChat.avatar}\" alt=\"Avatar\" />\n        </div>\n      `\n          : \"\"\n      }\n      <div class=\"voice-content\">\n        <div class=\"voice-controls\">\n          <button class=\"voice-play-button\">\n            <i class=\"fas fa-play\"></i>\n          </button>\n          <div class=\"voice-progress\">\n            <div class=\"voice-progress-bar\" style=\"width: 0%\"></div>\n          </div>\n          <span class=\"voice-time\">0:00</span>\n        </div>\n        <div class=\"voice-waveform\">\n          ${Array(20)\n            .fill()\n            .map(\n              () => `\n            <div class=\"voice-waveform-bar\"></div>\n          `,\n            )\n            .join(\"\")}\n        </div>\n      </div>\n    </div>\n  `\n\n  const playButton = container.querySelector(\".voice-play-button\")\n  const progressBar = container.querySelector(\".voice-progress-bar\")\n  const timeDisplay = container.querySelector(\".voice-time\")\n\n  let isPlaying = false\n\n  playButton.addEventListener(\"click\", () => {\n    if (isPlaying) {\n      audio.pause()\n      playButton.innerHTML = '<i class=\"fas fa-play\"></i>'\n    } else {\n      audio.play()\n      playButton.innerHTML = '<i class=\"fas fa-pause\"></i>'\n    }\n    isPlaying = !isPlaying\n  })\n\n  audio.addEventListener(\"timeupdate\", () => {\n    const progress = (audio.currentTime / audio.duration) * 100\n    progressBar.style.width = `${progress}%`\n    timeDisplay.textContent = formatTime(audio.currentTime)\n  })\n\n  audio.addEventListener(\"ended\", () => {\n    isPlaying = false\n    playButton.innerHTML = '<i class=\"fas fa-play\"></i>'\n    progressBar.style.width = \"0%\"\n  })\n\n  return container\n}\n\nfunction formatTime(seconds) {\n  if (!seconds || !isFinite(seconds) || isNaN(seconds)) {\n    return \"0:05\" // Durée par défaut\n  }\n\n  const minutes = Math.floor(seconds / 60)\n  const remainingSeconds = Math.floor(seconds % 60)\n  return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`\n}\n\nasync function handleVoiceMessage(audioBlob, currentChat) {\n  try {\n    const currentUser = getCurrentUser()\n    if (!currentUser || !currentChat) return\n\n    // Convertir en base64 pour le stockage\n    const base64Audio = await new Promise((resolve) => {\n      const reader = new FileReader()\n      reader.onloadend = () => resolve(reader.result)\n      reader.readAsDataURL(audioBlob)\n    })\n\n    const message = {\n      id: Date.now(),\n      senderId: currentUser.id,\n      receiverId: currentChat.id,\n      text: \"Message vocal\",\n      sent: true, // Important: marquer comme envoyé\n      time: new Date().toLocaleTimeString(\"fr-FR\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      }),\n      timestamp: new Date().toISOString(),\n      type: \"voice\",\n      fileData: base64Audio,\n      status: \"sent\",\n    }\n\n    // Envoyer le message\n    await sendMessage(message)\n  } catch (error) {\n    console.error(\"Erreur envoi message vocal:\", error)\n    showToast(\"Erreur lors de l'envoi du message vocal\", \"error\")\n  }\n}\n\n// Ajout de la fonction pour créer l'élément de message vocal\nfunction createVoiceMessageElement(message) {\n  const container = document.createElement(\"div\")\n  container.className = `message-bubble ${message.sent ? \"sent\" : \"received\"}`\n\n  container.innerHTML = `\n    <div class=\"voice-message\">\n      <button class=\"play-button\">\n        <i class=\"fas fa-play\"></i>\n      </button>\n      <div class=\"voice-waveform\">\n        <div class=\"waveform-progress\"></div>\n      </div>\n      <span class=\"duration\">0:00</span>\n      <span class=\"time\">${message.time}</span>\n      ${message.sent ? `<i class=\"fas fa-check-double message-status\"></i>` : \"\"}\n    </div>\n  `\n\n  // Gérer la lecture audio\n  const audio = new Audio(message.audioUrl)\n  const playButton = container.querySelector(\".play-button\")\n  const waveform = container.querySelector(\".waveform-progress\")\n  const duration = container.querySelector(\".duration\")\n\n  playButton.addEventListener(\"click\", () => {\n    if (audio.paused) {\n      audio.play()\n      playButton.innerHTML = '<i class=\"fas fa-pause\"></i>'\n    } else {\n      audio.pause()\n      playButton.innerHTML = '<i class=\"fas fa-play\"></i>'\n    }\n  })\n\n  audio.addEventListener(\"timeupdate\", () => {\n    const progress = (audio.currentTime / audio.duration) * 100\n    waveform.style.width = `${progress}%`\n    duration.textContent = formatTime(audio.currentTime)\n  })\n\n  audio.addEventListener(\"ended\", () => {\n    playButton.innerHTML = '<i class=\"fas fa-play\"></i>'\n    waveform.style.width = \"0%\"\n  })\n\n  return container\n}\n\nfunction setupVoiceRecording() {\n  const voiceBtn = document.getElementById(\"voiceBtn\")\n  if (voiceBtn) {\n    voiceBtn.addEventListener(\"click\", () => {\n      if (mediaRecorder && mediaRecorder.state === \"recording\") {\n        stopVoiceRecording()\n      } else {\n        startVoiceRecording()\n      }\n    })\n  }\n}\n\n// Ajouter ces fonctions après les imports et avant le reste du code\n\nfunction handleNewMessage(message) {\n  const currentUser = getCurrentUser()\n  if (!currentUser) return\n\n  try {\n    // Trouver le chat concerné\n    const chat = chats.find(c => c.id === message.senderId || c.id === message.receiverId)\n    if (!chat) return\n\n    // Ajouter le message à la conversation\n    chat.messages = chat.messages || []\n    chat.messages.push(message)\n    chat.lastMessage = message.text\n    chat.time = message.time\n    chat.lastMessageTime = message.timestamp\n\n    // Si ce n'est pas un message envoyé par l'utilisateur actuel\n    if (message.senderId !== currentUser.id) {\n      // Incrémenter le compteur de messages non lus si la conversation n'est pas ouverte\n      if (!currentChat || currentChat.id !== chat.id) {\n        chat.unread = (chat.unread || 0) + 1\n        showNotification(chat.name, message.text)\n      }\n    }\n\n    // Mettre à jour l'interface\n    if (currentChat && (currentChat.id === chat.id || currentChat.id === message.senderId)) {\n      renderMessages()\n    }\n    renderChatList()\n\n  } catch (error) {\n    console.error(\"Erreur lors du traitement du nouveau message:\", error)\n  }\n}\n\nfunction handleUserStatusUpdate(userId, isOnline) {\n  try {\n    // Mettre à jour le statut de l'utilisateur dans la liste des chats\n    const chat = chats.find((c) => c.id === userId)\n    if (chat) {\n      chat.isOnline = isOnline\n      chat.status = isOnline ? \"en ligne\" : \"hors ligne\"\n      renderChatList()\n\n      // Mettre à jour le header du chat si c'est le chat actuel\n      if (currentChat && currentChat.id === userId) {\n        const chatStatus = document.getElementById(\"chatStatus\")\n        if (chatStatus) {\n          chatStatus.textContent = chat.status\n        }\n      }\n    }\n  } catch (error) {\n    console.error(\"Erreur mise à jour statut:\", error)\n  }\n}\n\n// Modification de la fonction startAutoRefresh\nfunction startAutoRefresh() {\n  // Arrêter l'ancien intervalle s'il existe\n  if (window.refreshInterval) {\n    clearInterval(window.refreshInterval)\n  }\n\n  // Démarrer un nouvel intervalle\n  window.refreshInterval = setInterval(async () => {\n    try {\n      // Récupérer les nouveaux messages\n      if (currentChat) {\n        const messages = await getMessages(currentChat.id)\n        if (JSON.stringify(currentChat.messages) !== JSON.stringify(messages)) {\n          currentChat.messages = messages\n          renderMessages()\n        }\n      }\n\n      // Mettre à jour la liste des chats\n      const updatedChats = await getChats()\n      if (JSON.stringify(chats) !== JSON.stringify(updatedChats)) {\n        chats = updatedChats\n        renderChatList()\n      }\n    } catch (error) {\n      console.error(\"Erreur rafraîchissement:\", error)\n    }\n  }, 2000) // Toutes les 2 secondes\n}\n\n// Rendre les fonctions accessibles globalement\nwindow.renderMessages = renderMessages\nwindow.renderChatList = renderChatList\n// Ajouter cette fonction après les autres fonctions de message\nwindow.sendVoiceMessage = async function(message) {\n  if (!currentChat) return\n\n  try {\n    const currentUser = getCurrentUser()\n    if (!currentUser) return\n\n    // Ajouter le message localement pour l'affichage immédiat\n    currentChat.messages = currentChat.messages || []\n    currentChat.messages.push(message)\n    currentChat.lastMessage = \"🎤 Message vocal\"\n    currentChat.time = message.time\n    currentChat.lastMessageTime = message.timestamp\n\n    // Rafraîchir l'interface immédiatement\n    renderMessages()\n    renderChatList()\n\n    // Envoyer au serveur (asynchrone)\n    await handleSendMessage(currentUser.id, currentChat.id, message)\n    \n  } catch (error) {\n    console.error(\"Erreur envoi message vocal:\", error)\n    showToast(\"Erreur lors de l'envoi du message vocal\", \"error\")\n  }\n}\n"],"names":["showToast","message","type","toast","colors","showNotification","title","body","icon","notification","permission","showInAppNotification","container","playNotificationSound","audioContext","oscillator","gainNode","error","requestNotificationPermission","API_BASE_URL","api","userId","isOnline","response","updatedUser","updateResponse","getChats","updateUserStatus","getMessages","addMessage","createChatForUser","chat","updateChat","updates","newChat","currentUser","checkSession","savedUser","user","setCurrentUser","getCurrentUser","logout","login","name","phone","u","createLoginForm","onSuccess","form","nameInput","phoneInput","loginButton","e","currentCall","callTimeout","localStream","initializeAudioCall","contact","startCall","initializeVideoCall","createCallInterface","setupLocalVideo","playRingtone","responseTime","answerCall","existingCall","callInterface","setupCallControls","localVideo","muteBtn","cameraBtn","speakerBtn","hangupBtn","isMuted","cameraOff","track","endCall","stopRingtone","callStatus","startCallTimer","durationElement","updateTimer","elapsed","minutes","seconds","wasConnected","duration","sendCallMessage","callType","durationText","callMessage","lastMessageCounts","syncInterval","onNewMessageCallback","onUserStatusCallback","initializeRealTimeSync","onNewMessage","onUserStatus","checkForUpdates","allChats","messages","lastCount","newMessages","userData","handleSendMessage","senderId","receiverId","receiverMessage","chatUpdate","getMessagePreview","setupAudioRecorder","chats","currentChat","initApp","mainContainer","loginContainer","showMainApp","showLoginForm","loginForm","initMainInterface","loadChats","setupEventListeners","updateUserAvatar","showWelcomeMessage","handleNewMessage","handleUserStatusUpdate","startAutoRefresh","renderChatList","renderMessages","userAvatarButton","showProfile","backToChats","hideProfile","logoutButton","backButton","handleBackButton","setupMessageInput","setupNavigation","setupSearch","setupFilterTabs","setupCallButtons","setupFileAttachment","handleResize","setupVoiceRecording","searchInput","query","filterChats","filterTabs","tab","t","filter","applyFilter","voiceCallBtn","videoCallBtn","attachBtn","fileInput","handleFileUpload","event","file","base64","fileToBase64","getFileType","sendMessage","resolve","reject","reader","mimeType","item","_a","_b","filteredChats","renderFilteredChatList","chatList","chatItem","createChatItem","sidebar","profilePanel","chatArea","updateProfileInfo","profileImage","profileName","userAvatars","avatar","messagesArea","a","b","timeA","hasUnread","openChat","chatId","isMobile","showChatHeader","showMessageInput","chatHeader","chatAvatar","chatName","chatStatus","messageElement","createMessageElement","isSentByMe","messageDiv","messageContent","formatFileSize","_","messageEl","createAudioFromBase64","audio","formatTime","isPlaying","playButton","animationInterval","waveformBars","bar","height","playError","bytes","k","sizes","i","messageInput","messageText","sendButton","voiceBtn","sendTextMessage","text","startVoiceRecording","navItems","view","nav","mediaRecorder","audioChunks","stream","audioBlob","handleVoiceMessage","stopVoiceRecording","remainingSeconds","base64Audio","c","updatedChats"],"mappings":"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"}